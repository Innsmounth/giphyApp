{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categoriaAnterior","type","value","onChange","target","getGif","valor","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","original","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGif","console","log","key","GiftExpertApp","categoria","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EACPC,mBAAS,IADF,mBACpCC,EADoC,KACxBC,EADwB,KAoB3C,OACI,uBAAMC,SAbW,SAACC,GAElBA,EAAEC,iBAGFN,GAAa,SAACO,GAEV,MAAM,CAAEL,GAAR,mBAAsBK,OAE1BJ,EAAc,KAId,UACI,6BAAKD,IACL,uBACAM,KAAO,OACPC,MAASP,EACTQ,SAvBkB,SAACL,GAEvBF,EAAcE,EAAEM,OAAOF,c,8BCRlBG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAERC,EAFQ,0FAEiFC,UAAUH,GAF3F,qBAGUI,MAAMF,GAHhB,cAGRG,EAHQ,gBAIOA,EAASC,OAJhB,uBAIPC,EAJO,EAIPA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,SAASZ,QAVpB,kBAaPM,GAbO,4CAAH,sDCYJO,EAVK,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE3B,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCiBDO,EApBC,SAAC,GAAa,IAAZnB,EAAW,EAAXA,MAAW,ECAH,SAACA,GAAU,IAAD,EAENZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAJmB,mBAEzBC,EAFyB,KAElBC,EAFkB,KAoBhC,OAbAC,qBAAU,WACNxB,EAAOC,GACNwB,MAAK,SAAAd,GACFe,YAAW,WACPH,EAAS,CACTf,KAAMG,EACNU,SAAQ,MAET,UAGT,CAACpB,IAEIqB,EDnBuBK,CAAY1B,GAAnCoB,EADkB,EAClBA,QAAaP,EADK,EACVN,KAGf,OAFAoB,QAAQC,IAAIf,EAAQ,mBAGhB,qCACA,6BAAKb,IACJoB,GAAW,mBAAGJ,UAAU,oCAAb,sBACP,qBAAKA,UAAU,YAAf,SACQH,EAAOJ,KAAI,SAAAC,GAAG,OACf,wBAAC,EAAD,2BAEQA,GAFR,IAGImB,IAAOnB,EAAIC,eEZ7BmB,EAAgB,WAClBH,QAAQC,IAAI,+BADY,MAGMxC,mBAAS,CAAC,kBAHhB,mBAGrB2C,EAHqB,KAGV5C,EAHU,KAWxB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,aAAgBA,IAC7B,uBAEI,6BAGQ4C,EAAUtB,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEIA,MAASA,GADFA,Y,MCrBvCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7663da48.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategoria}) => {\r\n    const [inputValue, setInputValue] = useState(''); //Valor de inputValue que es lo que se pon e en la caja de input por defecto\r\n    \r\n    const handleInputChange = (e) =>{\r\n        //Cada que se escribe algo nuevo en el input\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        //Cada que se presiona enter se manda a llamar esta parte del codigo\r\n        e.preventDefault();//Impide que se recargue la pagina completa\r\n        // console.log(inputValue,'<--------- InputValue')\r\n\r\n        setCategoria((categoriaAnterior)=> {\r\n            // console.log(categoriaAnterior,'<---------- categoria')\r\n            return [inputValue,...categoriaAnterior]\r\n        });\r\n        setInputValue('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} > \r\n            <h2>{inputValue}</h2> \r\n            <input\r\n            type = \"text\"\r\n            value = {inputValue}\r\n            onChange={handleInputChange}//cada que se presione en el input\r\n            />\r\n        </form>\r\n            \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategoria :  PropTypes.func.isRequired\r\n};","export const getGif = async(valor) =>{\r\n        \r\n        const url = `https://api.giphy.com/v1/gifs/search?api_key=xTEP09ggxEaxyFAAnogp9Pt441VOS2XS&q=${encodeURI(valor)}&limit=5`\r\n        const response =  await fetch(url)\r\n        const {data} = await response.json();\r\n        // console.log(data.data)\r\n        const gifs = data.map( img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.original.url\r\n            }\r\n        });\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\" >\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","import React /* , { useEffect, useState } */ from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({valor}) => { //usado en GiftExpertApp\r\n    const {loading,data:images} = useFetchGif(valor);\r\n    console.log(images, '<---- ID IMAGEN')\r\n    \r\n    return (       \r\n        <>\r\n        <h2>{valor}</h2>   \r\n        {loading && <p className='animate__animated animate__bounce'>Cargando</p>}\r\n            {<div className=\"card-grid\">\r\n                    {images.map(img => (\r\n                    <GifGridItem \r\n                        // img = {img}\r\n                        {...img}//Es una forma de enviar las propiedades de  img de forma independiente, cuado se resive en el componente para extraer la //! url seria props.url o se puede destructurar {url} console.log(url)\r\n                        key = {img.id}\r\n                    />))}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGif\"\r\n\r\n\r\nexport const useFetchGif= (valor) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data :[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGif(valor)\r\n        .then(img => {\r\n            setTimeout(() => {\r\n                setState({\r\n                data: img,\r\n                loading:false\r\n                })\r\n            }, 3000);\r\n        })\r\n        \r\n    },[valor])\r\n\r\n    return state //actual sin modificaion data = [] y loading = true\r\n\r\n}","import React, { useState } from 'react';\r\nimport  {AddCategory}  from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GiftExpertApp = () => {\r\n    console.log('Inicia la aplicacion -->')\r\n\r\nconst [categoria, setCategoria] = useState(['One Punch Man']);\r\n\r\n\r\n// const handleAdd = () =>{\r\n//     // setCategoria([...categoria,'Hunter'])\r\n//     setCategoria((cat2)=>['HunterxHunter'])\r\n// }\r\n\r\n    return(\r\n        <>\r\n            <h2>GiftExpertAPP</h2>\r\n            <AddCategory setCategoria = {setCategoria}/>\r\n            <hr />\r\n            {/* <button onClick = {handleAdd}>Agragar algo</button> */}\r\n                <ol>\r\n                    {\r\n                        // categoria.map(valor => <li key={valor}>{valor}</li>)\r\n                        categoria.map(valor => (\r\n                            <GifGrid \r\n                                key = {valor}\r\n                                valor = {valor}\r\n                            />\r\n                        ))\r\n                    }\r\n                </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport {\r\n    GiftExpertApp as default\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp';\nimport '../node_modules/animate.css/animate.css'\n\nReactDOM.render(\n  <GiftExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}